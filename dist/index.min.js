!function(r,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.EasyTree=t():r.EasyTree=t()}(self,(()=>{return r={10:r=>{r.exports=class{constructor(r={}){let t=this,{label:e="label",id:n="id",parentId:o="parentId",children:i="children"}=r;this.props={label:e,id:n,parentId:o,children:i},Array.prototype.toTree=function(r){return t.toTree(this,r)},Array.prototype.toArray=function(r){return t.toArray(this,r)},Array.prototype.findPath=function(r){return t.findPath(this.toArray(),r)},Array.prototype.findChildren=function(r){return t.findChildren(this.toArray(),r)}}toTree(r,t){let{id:e,parentId:n,children:o}=this.props;const i=r.filter((r=>r[n]===t));if(i.length)return i.map((t=>({...t,[o]:this.toTree(r,t[e])})))}toArray(r,t){let e=[],{label:n,id:o,parentId:i,children:p}=this.props;for(let d of r){let r={...d,[n]:d[n],[i]:t,[o]:d[o]};delete r[p],e.push(r),d[p]&&(e=[...e,...this.toArray(d[p],d[o])])}return e}findPath(r,t){let e=[],{id:n,parentId:o}=this.props;return r.forEach((i=>{i[n]===t&&(e.unshift(i),e=[...this.findPath(r,i[o]),...e])})),e}findChildren(r,t){let e=[],{id:n,parentId:o}=this.props;return r.forEach((i=>{i[o]===t&&(e.push(i),e=[...e,...this.findChildren(r,i[n])])})),e}}}},t={},function e(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return r[n](i,i.exports,e),i.exports}(10);var r,t}));